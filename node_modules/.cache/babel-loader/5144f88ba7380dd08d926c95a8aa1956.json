{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\what what\\\\Desktop\\\\scoreboard\\\\src\\\\components\\\\Stopwatch.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Stopwatch = () => {\n  _s();\n\n  const [isRunning, setIsRunning] = useState(false);\n  const [elapsedTime, setElapsedTime] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stopwatch\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Stopwatch\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"stopwatch-time\",\n      children: \"0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsRunning(prevValue => !prevValue),\n      children: isRunning ? 'Stop' : 'Start'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setElapsedTime(0),\n      children: \"reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Stopwatch, \"9MmVVFr2dkfndZStbQDIuKCbsFE=\");\n\n_c = Stopwatch;\nexport default Stopwatch;\n\nvar _c;\n\n$RefreshReg$(_c, \"Stopwatch\");","map":{"version":3,"names":["React","useState","Stopwatch","isRunning","setIsRunning","elapsedTime","setElapsedTime","prevValue"],"sources":["C:/Users/what what/Desktop/scoreboard/src/components/Stopwatch.js"],"sourcesContent":["import React, {useState} from 'react';\r\n\r\nconst Stopwatch = () => {\r\n    const [isRunning, setIsRunning] = useState(false);\r\n    const[elapsedTime, setElapsedTime] = useState(0);\r\n\r\n    return(\r\n        <div className='stopwatch'>\r\n            <h2>Stopwatch</h2>\r\n            <span className='stopwatch-time'>0</span>\r\n            <button onClick={() => setIsRunning((prevValue) => !prevValue)}>\r\n                {isRunning ? 'Stop' : 'Start'}\r\n            </button>\r\n            <button onClick={() => setElapsedTime(0)}>reset</button>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Stopwatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;AAEA,MAAMC,SAAS,GAAG,MAAM;EAAA;;EACpB,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BH,QAAQ,CAAC,KAAD,CAA1C;EACA,MAAK,CAACI,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,CAAD,CAA7C;EAEA,oBACI;IAAK,SAAS,EAAC,WAAf;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAM,SAAS,EAAC,gBAAhB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ,eAGI;MAAQ,OAAO,EAAE,MAAMG,YAAY,CAAEG,SAAD,IAAe,CAACA,SAAjB,CAAnC;MAAA,UACKJ,SAAS,GAAG,MAAH,GAAY;IAD1B;MAAA;MAAA;MAAA;IAAA,QAHJ,eAMI;MAAQ,OAAO,EAAE,MAAMG,cAAc,CAAC,CAAD,CAArC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QANJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAUH,CAdD;;GAAMJ,S;;KAAAA,S;AAiBN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}