{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\what what\\\\Desktop\\\\scoreboard\\\\src\\\\components\\\\Player.js\";\nimport React, { memo } from 'react';\nimport Counter from './Counter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Player = _ref => {\n  let {\n    name,\n    id,\n    changeScore,\n    score\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"player-name\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"remove-player\",\n        onClick: () => props.removePlayer(id),\n        children: \"\\u2716\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 11\n      }, this), name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Counter, {\n      score: score,\n      id: id,\n      changeScore: changeScore\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 7\n  }, this);\n};\n\n_c = Player;\n\nconst playerPropsAreEqual = (prevProps, nextProps) => {\n  return prevProps.score === nextProps.score;\n};\n\nexport default _c2 = /*#__PURE__*/memo(Player, playerPropsAreEqual);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Player\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","memo","Counter","Player","name","id","changeScore","score","props","removePlayer","playerPropsAreEqual","prevProps","nextProps"],"sources":["C:/Users/what what/Desktop/scoreboard/src/components/Player.js"],"sourcesContent":["import React, {memo} from 'react';\r\nimport Counter from './Counter';\r\n\r\nconst Player = ({name, id, changeScore, score}) => {\r\n    return (\r\n      <div className=\"player\">\r\n        <span className=\"player-name\">\r\n          <button className=\"remove-player\" onClick={() => props.removePlayer(id)}>âœ–</button>\r\n          {name}\r\n        </span>\r\n  \r\n        <Counter \r\n        score={score}\r\n        id={id}\r\n        changeScore={changeScore}\r\n         />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const playerPropsAreEqual = (prevProps, nextProps) => {\r\n    return prevProps.score === nextProps.score\r\n  }\r\n\r\n  export default memo(Player, playerPropsAreEqual);"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,IAAf,QAA0B,OAA1B;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,MAAMC,MAAM,GAAG,QAAoC;EAAA,IAAnC;IAACC,IAAD;IAAOC,EAAP;IAAWC,WAAX;IAAwBC;EAAxB,CAAmC;EAC/C,oBACE;IAAK,SAAS,EAAC,QAAf;IAAA,wBACE;MAAM,SAAS,EAAC,aAAhB;MAAA,wBACE;QAAQ,SAAS,EAAC,eAAlB;QAAkC,OAAO,EAAE,MAAMC,KAAK,CAACC,YAAN,CAAmBJ,EAAnB,CAAjD;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,EAEGD,IAFH;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAME,QAAC,OAAD;MACA,KAAK,EAAEG,KADP;MAEA,EAAE,EAAEF,EAFJ;MAGA,WAAW,EAAEC;IAHb;MAAA;MAAA;MAAA;IAAA,QANF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAcD,CAfH;;KAAMH,M;;AAiBJ,MAAMO,mBAAmB,GAAG,CAACC,SAAD,EAAYC,SAAZ,KAA0B;EACpD,OAAOD,SAAS,CAACJ,KAAV,KAAoBK,SAAS,CAACL,KAArC;AACD,CAFD;;AAIA,kCAAeN,IAAI,CAACE,MAAD,EAASO,mBAAT,CAAnB"},"metadata":{},"sourceType":"module"}